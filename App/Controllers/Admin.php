<?php

namespace App\Controllers;

use App\Auth;
use App\Flash;
use App\Models\Book;
use App\Models\BookDetails;
use Core\View;

class Admin extends Authenticated {
    public function index() {
        $this->before();
        View::renderTemplate('Admin/index.twig');
    }

    public function bookIndex() {
        $this->before();
        $bookInstance = new Book();
        $books = $bookInstance->findAll();
        View::renderTemplate('Admin/books/index.twig', ['books' => $books]);
    }

    public function bookEdit() {
        $this->before();
        $bookInstance = new Book();
        $array = explode('/', $_SERVER['REQUEST_URI']);
        $bookId = end($array);
        $book = $bookInstance->findByID($bookId);
        View::renderTemplate('Admin/books/edit.twig', ['book' => $book]);
    }

    public function bookEditUpdate() {
        $this->before();
        $array = explode('/', $_SERVER['REQUEST_URI']);
        $bookId = end($array);
        $book = new Book();
        if($book->updateBook($bookId, $_POST)) {
//            BookDetails::updateBookDetail($bookId, $_POST);
        }
    }

    public function bookCreate() {
        $this->before();
        View::renderTemplate('Admin/books/create.twig');
    }

    public function bookCreateNew() {
        $book = new Book();
        $bookId = $book->insertBook($_POST);
        BookDetails::insertBookDetail($bookId, $_POST['page_link']);
        Flash::addMessage('Thêm sách thành công', Flash::SUCCESS);
    }

    public function bookDelete() {
        $this->before();
        $book = new Book();
        $array = explode('/', $_SERVER['REQUEST_URI']);
        $bookId = end($array);
        if($book->deleteBook($bookId)) {
            Flash::addMessage('Xóa sách thành công', Flash::WARNING);
        } else {
            Flash::addMessage('Xóa sách thất bại. Vui lòng thử lại sau', Flash::WARNING);
        }
        $this->redirect('/admin/books');
    }

    protected function before() {
        parent::before(); // TODO: Change the autogenerated stub
        parent::checkAdmin();
        $this->user = Auth::getUser();
    }
}